/******* Do not edit this file *******
Simple Custom CSS and JS - by Silkypress.com
Saved: Jul 03 2025 | 07:01:29 */
document.addEventListener("DOMContentLoaded", function () {
  
    if (document.body.classList.contains("page-id-9616") || document.body.classList.contains("page-id-9625")) 
   {
    const apiUrl = "https://dfes.goa.gov.in/disaster-management/live-calls/data";
    const tableBody = document.querySelector("#fire-data-table tbody");
    const timeHeader = document.querySelector('th[data-column="time"]');
    const loadMoreBtn = document.getElementById("load-more-btn");

    let tableData = [];
    let currentPage = 1;
    const rowsPerPage = 10;

    function parseDateTime(item) {
      const dateStr = item.date || "1970-01-01";
      const timeStr = item.outtime || "00:00";
      return new Date(`${dateStr} ${timeStr}`);
    }

    function sortTable(column, order) {
      tableData.sort((a, b) => {
        let valA = column === "time" ? parseDateTime(a) : (a[column] || "").toString().toLowerCase();
        let valB = column === "time" ? parseDateTime(b) : (b[column] || "").toString().toLowerCase();
        return order === "asc" ? (valA > valB ? 1 : -1) : (valA < valB ? 1 : -1);
      });
      renderTable();
    }

    function renderTable() {
      tableBody.innerHTML = "";
      const startIndex = 0;
      const endIndex = currentPage * rowsPerPage;
      const dataToShow = tableData.slice(startIndex, endIndex);

      dataToShow.forEach(item => {
        const time = `<div><span style="display:block; white-space:nowrap;">${item.date || "-"}</span><span style="display:block;">${item.outtime || "-"}</span></div>`;
        const description = `${item.description || "-"} near ${item.near || "-"} at ${item.at || "-"}`;
        const row = `
          <tr>
            <td>${item.taluka || "-"}</td>
            <td>${item.village || "-"}</td>
            <td>${item.type || "-"}</td>
            <td>${item.station || "-"}</td>
            <td>${time}</td>
            <td style="white-space: normal; word-break: break-word;">${description}</td>
          </tr>
        `;
        tableBody.insertAdjacentHTML("beforeend", row);
      });

      loadMoreBtn.style.display = tableData.length > endIndex ? "inline-block" : "none";
    }

    document.querySelectorAll("#fire-data-table thead th").forEach(header => {
      header.addEventListener("click", function () {
        const column = this.getAttribute("data-column");
        const currentOrder = this.getAttribute("data-order");
        const newOrder = currentOrder === "asc" ? "desc" : "asc";
        this.setAttribute("data-order", newOrder);
        sortTable(column, newOrder);
      });
    });

    loadMoreBtn.addEventListener("click", function () {
      currentPage++;
      renderTable();
    });

    fetch(apiUrl)
      .then(res => res.json())
      .then(data => {
        tableData = data;
        sortTable("time", "desc");
        timeHeader.setAttribute("data-order", "desc");
      })
      .catch(err => {
        console.error("Error:", err);
        tableBody.innerHTML = `<tr><td colspan="6">Error loading data</td></tr>`;
      });
  }
});
